on:
  issues:
    types: [opened]

name: Create JIRA issue linked to newly created GitHub issue

jobs:
  create-jira-issue:
    name: Create LOGGING JIRA Ticket for new Issue
    runs-on: ubuntu-latest
    # Restrict execution to issues containing "newrelic-logging" in its title
    # if: contains(github.event.issue.title, 'newrelic-logging')
    env:
      JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
      JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
      JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
      JIRA_FIELDS: ${{ secrets.JIRA_FIELDS }}
      JIRA_PROJECT: LOGGING
    steps:
      - name: Login to JIRA
        uses: atlassian/gajira-login@master

      # Reference on available issue fields: https://docs.github.com/en/graphql/reference/objects#issue
      - name: Create
        id: create
        uses: atlassian/gajira-create@master
        with:
          project: ${{ env.JIRA_PROJECT }}
          issuetype: Task
          summary: |
            [${{ github.event.repository.name }}] [issue #${{ github.event.issue.number }}] ${{ github.event.issue.title }}
          description: |
            h3. {color:red}<< This is an autogenerated issue from GitHub triggered by the creation of this issue: ${{ github.event.issue.url }} >>{color}

            h2. Description
            ${{ github.event.issue.body }}
          fields: ${{ env.JIRA_FIELDS }}

      - name: Log created issue
        run: echo "Issue ${{ steps.create.outputs.issue }} was created"

      # Unfortunately, there is an automation in our JIRA that modifies the labels, so even if we include it
      # during the creation of the issue, they are removed. So, unfortunately we need to add them later
      # by letting the automation taking place (sleeping, sorry for the dirty hack) and then updating the issue.
      # Same as reported here: https://community.atlassian.com/t5/Jira-questions/can-t-create-issue-w-labels-via-API-on-some-backlogs-boards/qaq-p/1689772
      - name: Update labels
        id: update
        run: |
          sleep 20
          cat body.json
          curl \
             -s \
             -D- \
             --user "${{ env.JIRA_USER_EMAIL }}:${{ env.JIRA_API_TOKEN }}" \
             -X PUT \
             --data '{ "fields": ${{ env.JIRA_FIELDS }} }' \
             -H "Content-Type: application/json" \
             "${{ env.JIRA_BASE_URL }}/rest/api/2/issue/$CREATED_JIRA_ISSUE"
        env:
          CREATED_JIRA_ISSUE: ${{ steps.create.outputs.issue }}